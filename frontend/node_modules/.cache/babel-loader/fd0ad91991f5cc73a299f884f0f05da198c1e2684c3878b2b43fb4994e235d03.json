{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anwar\\\\Downloads\\\\Compressed\\\\VulnerabilityAnalysisAI_v2\\\\frontend\\\\src\\\\pages\\\\Repositories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Repositories.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Repositories() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  const [filteredRepos, setFilteredRepos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('updated_at');\n  const [sortDirection, setSortDirection] = useState('desc');\n  const [ollamaModels, setOllamaModels] = useState([]);\n  const [isOllamaAvailable, setIsOllamaAvailable] = useState(false);\n  const {\n    token,\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // Vérifier l'authentification\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n    }\n  }, [isAuthenticated, navigate]);\n\n  // Charger les dépôts\n  useEffect(() => {\n    async function fetchRepositories() {\n      if (!token) return;\n      setLoading(true);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/repos/list`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            token\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP ${response.status}`);\n        }\n        const data = await response.json();\n        setRepositories(data.repositories);\n        setFilteredRepos(data.repositories);\n      } catch (error) {\n        console.error('Erreur lors du chargement des dépôts:', error);\n        setError('Impossible de charger les dépôts. Veuillez réessayer.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchRepositories();\n  }, [token]);\n\n  // Vérifier la disponibilité d'Ollama et récupérer les modèles\n  useEffect(() => {\n    async function checkOllama() {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/ollama/models`);\n        if (response.ok) {\n          const data = await response.json();\n          setOllamaModels(data.models);\n          setIsOllamaAvailable(data.models && data.models.length > 0);\n        } else {\n          setIsOllamaAvailable(false);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la vérification d\\'Ollama:', error);\n        setIsOllamaAvailable(false);\n      }\n    }\n    checkOllama();\n  }, []);\n\n  // Filtrer et trier les dépôts\n  useEffect(() => {\n    let filtered = [...repositories];\n\n    // Filtrer par terme de recherche\n    if (searchTerm) {\n      filtered = filtered.filter(repo => repo.name.toLowerCase().includes(searchTerm.toLowerCase()) || repo.description && repo.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Trier les dépôts\n    filtered.sort((a, b) => {\n      let valueA = a[sortBy];\n      let valueB = b[sortBy];\n\n      // Gestion des dates\n      if (sortBy === 'created_at' || sortBy === 'updated_at' || sortBy === 'pushed_at') {\n        valueA = new Date(valueA);\n        valueB = new Date(valueB);\n      }\n\n      // Gestion des chaînes\n      if (typeof valueA === 'string' && typeof valueB === 'string') {\n        return sortDirection === 'asc' ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA);\n      }\n\n      // Gestion des nombres et dates\n      return sortDirection === 'asc' ? valueA - valueB : valueB - valueA;\n    });\n    setFilteredRepos(filtered);\n  }, [repositories, searchTerm, sortBy, sortDirection]);\n\n  // Gérer le changement de tri\n  const handleSort = column => {\n    if (sortBy === column) {\n      // Inverser la direction si on clique sur la même colonne\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      // Nouvelle colonne, définir le tri par défaut\n      setSortBy(column);\n      setSortDirection('desc');\n    }\n  };\n\n  // Formater la date\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\n  };\n\n  // Démarrer l'analyse d'un dépôt\n  const startAnalysis = repoName => {\n    navigate(`/analysis/${encodeURIComponent(repoName)}`);\n  };\n\n  // Afficher l'état de chargement\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repositories-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des d\\xE9p\\xF4ts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repositories-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vos D\\xE9p\\xF4ts GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), !isOllamaAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ollama-warning\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u26A0\\uFE0F Ollama n'est pas disponible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pour analyser vos d\\xE9p\\xF4ts, assurez-vous qu'Ollama est install\\xE9 et en cours d'ex\\xE9cution sur votre machine. Aucun mod\\xE8le n'a \\xE9t\\xE9 d\\xE9tect\\xE9.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://ollama.ai\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"T\\xE9l\\xE9charger Ollama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), isOllamaAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ollama-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2705 Ollama est disponible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mod\\xE8les d\\xE9tect\\xE9s (\", ollamaModels.length, \"): \", ollamaModels.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repositories-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Rechercher un d\\xE9p\\xF4t...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tri actuel: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sort-field\",\n          children: sortBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sort-direction\",\n          children: sortDirection === 'asc' ? '↑' : '↓'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), filteredRepos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-repositories\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun d\\xE9p\\xF4t trouv\\xE9.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repositories-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"repositories-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('name'),\n              children: [\"Nom \", sortBy === 'name' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('language'),\n              children: [\"Langage \", sortBy === 'language' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('stargazers_count'),\n              children: [\"\\xC9toiles \", sortBy === 'stargazers_count' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('created_at'),\n              children: [\"Cr\\xE9\\xE9 le \", sortBy === 'created_at' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('updated_at'),\n              children: [\"Mis \\xE0 jour le \", sortBy === 'updated_at' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredRepos.map(repo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: repo.html_url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: repo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"description\",\n              children: repo.description || 'Pas de description'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: repo.language || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"center\",\n              children: repo.stargazers_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(repo.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(repo.updated_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"analyze-button\",\n                onClick: () => startAnalysis(repo.full_name),\n                disabled: !isOllamaAvailable,\n                children: \"Analyser\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, repo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(Repositories, \"IAIVm1Dm5BQ5SZjNBWXNXmwDoYI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Repositories;\nexport default Repositories;\nvar _c;\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","jsxDEV","_jsxDEV","Repositories","_s","repositories","setRepositories","filteredRepos","setFilteredRepos","loading","setLoading","error","setError","searchTerm","setSearchTerm","sortBy","setSortBy","sortDirection","setSortDirection","ollamaModels","setOllamaModels","isOllamaAvailable","setIsOllamaAvailable","token","isAuthenticated","navigate","fetchRepositories","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","checkOllama","models","length","filtered","filter","repo","name","toLowerCase","includes","description","sort","a","b","valueA","valueB","Date","localeCompare","handleSort","column","formatDate","dateString","options","year","month","day","toLocaleDateString","startAnalysis","repoName","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","join","type","placeholder","value","onChange","e","onClick","map","html_url","language","stargazers_count","created_at","updated_at","full_name","disabled","id","_c","$RefreshReg$"],"sources":["C:/Users/Anwar/Downloads/Compressed/VulnerabilityAnalysisAI_v2/frontend/src/pages/Repositories.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport './Repositories.css';\r\n\r\nfunction Repositories() {\r\n  const [repositories, setRepositories] = useState([]);\r\n  const [filteredRepos, setFilteredRepos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('updated_at');\r\n  const [sortDirection, setSortDirection] = useState('desc');\r\n  const [ollamaModels, setOllamaModels] = useState([]);\r\n  const [isOllamaAvailable, setIsOllamaAvailable] = useState(false);\r\n  const { token, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Vérifier l'authentification\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/login');\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  // Charger les dépôts\r\n  useEffect(() => {\r\n    async function fetchRepositories() {\r\n      if (!token) return;\r\n\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/repos/list`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ token }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Erreur HTTP ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setRepositories(data.repositories);\r\n        setFilteredRepos(data.repositories);\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des dépôts:', error);\r\n        setError('Impossible de charger les dépôts. Veuillez réessayer.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchRepositories();\r\n  }, [token]);\r\n\r\n  // Vérifier la disponibilité d'Ollama et récupérer les modèles\r\n  useEffect(() => {\r\n    async function checkOllama() {\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/ollama/models`);\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setOllamaModels(data.models);\r\n          setIsOllamaAvailable(data.models && data.models.length > 0);\r\n        } else {\r\n          setIsOllamaAvailable(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la vérification d\\'Ollama:', error);\r\n        setIsOllamaAvailable(false);\r\n      }\r\n    }\r\n\r\n    checkOllama();\r\n  }, []);\r\n\r\n  // Filtrer et trier les dépôts\r\n  useEffect(() => {\r\n    let filtered = [...repositories];\r\n    \r\n    // Filtrer par terme de recherche\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(repo => \r\n        repo.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (repo.description && repo.description.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n    \r\n    // Trier les dépôts\r\n    filtered.sort((a, b) => {\r\n      let valueA = a[sortBy];\r\n      let valueB = b[sortBy];\r\n      \r\n      // Gestion des dates\r\n      if (sortBy === 'created_at' || sortBy === 'updated_at' || sortBy === 'pushed_at') {\r\n        valueA = new Date(valueA);\r\n        valueB = new Date(valueB);\r\n      }\r\n      \r\n      // Gestion des chaînes\r\n      if (typeof valueA === 'string' && typeof valueB === 'string') {\r\n        return sortDirection === 'asc' \r\n          ? valueA.localeCompare(valueB)\r\n          : valueB.localeCompare(valueA);\r\n      }\r\n      \r\n      // Gestion des nombres et dates\r\n      return sortDirection === 'asc' ? valueA - valueB : valueB - valueA;\r\n    });\r\n    \r\n    setFilteredRepos(filtered);\r\n  }, [repositories, searchTerm, sortBy, sortDirection]);\r\n\r\n  // Gérer le changement de tri\r\n  const handleSort = (column) => {\r\n    if (sortBy === column) {\r\n      // Inverser la direction si on clique sur la même colonne\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      // Nouvelle colonne, définir le tri par défaut\r\n      setSortBy(column);\r\n      setSortDirection('desc');\r\n    }\r\n  };\r\n\r\n  // Formater la date\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  // Démarrer l'analyse d'un dépôt\r\n  const startAnalysis = (repoName) => {\r\n    navigate(`/analysis/${encodeURIComponent(repoName)}`);\r\n  };\r\n\r\n  // Afficher l'état de chargement\r\n  if (loading) {\r\n    return (\r\n      <div className=\"repositories-loading\">\r\n        <div className=\"spinner\"></div>\r\n        <p>Chargement des dépôts...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"repositories-container\">\r\n      <h1>Vos Dépôts GitHub</h1>\r\n      \r\n      {!isOllamaAvailable && (\r\n        <div className=\"ollama-warning\">\r\n          <h3>⚠️ Ollama n'est pas disponible</h3>\r\n          <p>\r\n            Pour analyser vos dépôts, assurez-vous qu'Ollama est installé et en cours d'exécution sur votre machine.\r\n            Aucun modèle n'a été détecté.\r\n          </p>\r\n          <a href=\"https://ollama.ai\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Télécharger Ollama\r\n          </a>\r\n        </div>\r\n      )}\r\n      \r\n      {isOllamaAvailable && (\r\n        <div className=\"ollama-info\">\r\n          <h3>✅ Ollama est disponible</h3>\r\n          <p>Modèles détectés ({ollamaModels.length}): {ollamaModels.join(', ')}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"repositories-controls\">\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Rechercher un dépôt...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"sort-info\">\r\n          <span>Tri actuel: </span>\r\n          <span className=\"sort-field\">{sortBy}</span>\r\n          <span className=\"sort-direction\">{sortDirection === 'asc' ? '↑' : '↓'}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {filteredRepos.length === 0 ? (\r\n        <div className=\"no-repositories\">\r\n          <p>Aucun dépôt trouvé.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"repositories-table-container\">\r\n          <table className=\"repositories-table\">\r\n            <thead>\r\n              <tr>\r\n                <th onClick={() => handleSort('name')}>Nom {sortBy === 'name' && (sortDirection === 'asc' ? '↑' : '↓')}</th>\r\n                <th>Description</th>\r\n                <th onClick={() => handleSort('language')}>Langage {sortBy === 'language' && (sortDirection === 'asc' ? '↑' : '↓')}</th>\r\n                <th onClick={() => handleSort('stargazers_count')}>Étoiles {sortBy === 'stargazers_count' && (sortDirection === 'asc' ? '↑' : '↓')}</th>\r\n                <th onClick={() => handleSort('created_at')}>Créé le {sortBy === 'created_at' && (sortDirection === 'asc' ? '↑' : '↓')}</th>\r\n                <th onClick={() => handleSort('updated_at')}>Mis à jour le {sortBy === 'updated_at' && (sortDirection === 'asc' ? '↑' : '↓')}</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredRepos.map((repo) => (\r\n                <tr key={repo.id}>\r\n                  <td>\r\n                    <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {repo.name}\r\n                    </a>\r\n                  </td>\r\n                  <td className=\"description\">{repo.description || 'Pas de description'}</td>\r\n                  <td>{repo.language || 'N/A'}</td>\r\n                  <td className=\"center\">{repo.stargazers_count}</td>\r\n                  <td>{formatDate(repo.created_at)}</td>\r\n                  <td>{formatDate(repo.updated_at)}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"analyze-button\"\r\n                      onClick={() => startAnalysis(repo.full_name)}\r\n                      disabled={!isOllamaAvailable}\r\n                    >\r\n                      Analyser\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repositories;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}