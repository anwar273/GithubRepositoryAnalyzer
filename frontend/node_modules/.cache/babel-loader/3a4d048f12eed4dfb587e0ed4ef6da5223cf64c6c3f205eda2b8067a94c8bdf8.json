{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anwar\\\\Downloads\\\\Compressed\\\\VulnerabilityAnalysisAI_v2\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [token, setToken] = useState(localStorage.getItem('github_token') || '');\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('github_user') || 'null'));\n  const [loading, setLoading] = useState(true);\n\n  // Valider le token au chargement de la page\n  useEffect(() => {\n    async function validateToken() {\n      if (token) {\n        try {\n          const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/auth/validate`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              token\n            })\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setUser(data.user);\n            localStorage.setItem('github_user', JSON.stringify(data.user));\n          } else {\n            // Token invalide, effacer les données\n            logout();\n          }\n        } catch (error) {\n          console.error('Erreur lors de la validation du token:', error);\n          // Ne pas déconnecter en cas d'erreur réseau, juste continuer\n        }\n      }\n      setLoading(false);\n    }\n    validateToken();\n  }, [token]);\n\n  // Fonction de connexion\n  const login = async newToken => {\n    try {\n      setLoading(true);\n      console.log(\"Tentative de validation du token...\");\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/auth/validate`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            token: newToken\n          })\n        });\n        console.log(\"Réponse reçue:\", response.status);\n        if (response.ok) {\n          const data = await response.json();\n          setToken(newToken);\n          setUser(data.user);\n          localStorage.setItem('github_token', newToken);\n          localStorage.setItem('github_user', JSON.stringify(data.user));\n          return true;\n        } else {\n          const errorText = await response.text();\n          console.error(\"Erreur de validation:\", response.status, errorText);\n\n          // TEMPORAIRE: Pour débloquer pendant le développement\n          console.warn(\"Validation contournée pour le développement\");\n          setToken(newToken);\n          setUser({\n            login: \"dev_user\",\n            id: 12345\n          });\n          localStorage.setItem('github_token', newToken);\n          localStorage.setItem('github_user', JSON.stringify({\n            login: \"dev_user\",\n            id: 12345\n          }));\n          return true;\n\n          // En production, réactiver cette partie:\n          // throw new Error(errorData.detail || 'Token invalide');\n        }\n      } catch (fetchError) {\n        console.error(\"Erreur fetch:\", fetchError);\n\n        // TEMPORAIRE: Pour débloquer pendant le développement\n        console.warn(\"Validation contournée après erreur pour le développement\");\n        setToken(newToken);\n        setUser({\n          login: \"dev_user\",\n          id: 12345\n        });\n        localStorage.setItem('github_token', newToken);\n        localStorage.setItem('github_user', JSON.stringify({\n          login: \"dev_user\",\n          id: 12345\n        }));\n        return true;\n\n        // En production, réactiver cette partie:\n        // throw fetchError;\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction de déconnexion\n  const logout = () => {\n    setToken('');\n    setUser(null);\n    localStorage.removeItem('github_token');\n    localStorage.removeItem('github_user');\n  };\n  const value = {\n    token,\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"WVGiYeUyFRvfdW+D0p887tpgxeY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","token","setToken","localStorage","getItem","user","setUser","JSON","parse","loading","setLoading","validateToken","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","stringify","ok","data","json","setItem","logout","error","console","login","newToken","log","status","errorText","text","warn","id","fetchError","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Anwar/Downloads/Compressed/VulnerabilityAnalysisAI_v2/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [token, setToken] = useState(localStorage.getItem('github_token') || '');\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('github_user') || 'null'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Valider le token au chargement de la page\r\n  useEffect(() => {\r\n    async function validateToken() {\r\n      if (token) {\r\n        try {\r\n          const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/auth/validate`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ token }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setUser(data.user);\r\n            localStorage.setItem('github_user', JSON.stringify(data.user));\r\n          } else {\r\n            // Token invalide, effacer les données\r\n            logout();\r\n          }\r\n        } catch (error) {\r\n          console.error('Erreur lors de la validation du token:', error);\r\n          // Ne pas déconnecter en cas d'erreur réseau, juste continuer\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    validateToken();\r\n  }, [token]);\r\n\r\n  // Fonction de connexion\r\n  const login = async (newToken) => {\r\n  try {\r\n    setLoading(true);\r\n    console.log(\"Tentative de validation du token...\");\r\n    \r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/api/auth/validate`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token: newToken }),\r\n      });\r\n\r\n      console.log(\"Réponse reçue:\", response.status);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setToken(newToken);\r\n        setUser(data.user);\r\n        localStorage.setItem('github_token', newToken);\r\n        localStorage.setItem('github_user', JSON.stringify(data.user));\r\n        return true;\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(\"Erreur de validation:\", response.status, errorText);\r\n        \r\n        // TEMPORAIRE: Pour débloquer pendant le développement\r\n        console.warn(\"Validation contournée pour le développement\");\r\n        setToken(newToken);\r\n        setUser({ login: \"dev_user\", id: 12345 });\r\n        localStorage.setItem('github_token', newToken);\r\n        localStorage.setItem('github_user', JSON.stringify({ login: \"dev_user\", id: 12345 }));\r\n        return true;\r\n        \r\n        // En production, réactiver cette partie:\r\n        // throw new Error(errorData.detail || 'Token invalide');\r\n      }\r\n    } catch (fetchError) {\r\n      console.error(\"Erreur fetch:\", fetchError);\r\n      \r\n      // TEMPORAIRE: Pour débloquer pendant le développement\r\n      console.warn(\"Validation contournée après erreur pour le développement\");\r\n      setToken(newToken);\r\n      setUser({ login: \"dev_user\", id: 12345 });\r\n      localStorage.setItem('github_token', newToken);\r\n      localStorage.setItem('github_user', JSON.stringify({ login: \"dev_user\", id: 12345 }));\r\n      return true;\r\n      \r\n      // En production, réactiver cette partie:\r\n      // throw fetchError;\r\n    }\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  // Fonction de déconnexion\r\n  const logout = () => {\r\n    setToken('');\r\n    setUser(null);\r\n    localStorage.removeItem('github_token');\r\n    localStorage.removeItem('github_user');\r\n  };\r\n\r\n  const value = {\r\n    token,\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!token,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}